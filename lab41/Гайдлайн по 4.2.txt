Нужно захуярить задержку X, допустим, как в моем случае, 1.15 и Y, допустим, 0.2, как, опять же, в моем случае
Берем 16000000 - это число тактов в секунду на ебанине, которую мы программируем. Не раздумывая делим на 1024, потому что мы пиздатые и у нас есть предделитель, 
и чтобы не искать два лишних разряда, в которые придется помещать ебом циферок для нормального дилея. Предделитель это хуета, которая говорит, раз в сколько тактов проца таймеру делать свой такт, ясен хуй если ничего не установить, такт таймера будет совпадать с тактом проца
Разделили, получили 15625 тактов таймера в секунду, умножаем на свое число, получаем, допустим
17968.75 для задержки в 1.15с и 3125 для задержки в 0.2с 
Первое число нихуя не целое, а в регистры, как известно, подобное говно мы записать не можем, если только не выебываться, а выебываться мы не будем
Пишем, что на 0.25(или 0.75, но 0.25 меньше) такта таймера, что равняется 256 тактам проца мы грешим, не часы же пишем для МКС.
Берем 17969 и 3125, лезем в великий и могучий и гуглим разложение числа на множители, нужно получить два числа, которые можно нормально запихнуть в регистры, т.е числа до 255
Если не получилось, иди нахуй
шучу
опять шучу
Да, не повезло короче, придется ебаться и придумывать какое-нибудь говно типа лишних nopов или еще какого говна
Дальше есть два режима: NORMAL и CTC, как конфижить первый написано в примере, у меня второй
Отличие в том, что при нормальном режиме прерывание хуярит на оверфлоу TCNT0, т.е на FF, а в CTC, когда TCNT0 достигнет значения, записанного в OCR0A OCR0B, если там нихуя, то тоже FF
Так вот в случае NORMAL отнимаем от FF одно из полученных чисел и записываем результат в TCNT0 каждый раз после инкремента счетчика, а второе число записываем в то, с чем будем сравнивать счетчик (в лабе это регистр r21)
В случае CTC просто хуярим одно число в OCR0A, второе в то, с чем будем сравнивать счетчик (в лабе это регистр r21)

Запускаем дебаггер и смотрим сколько времени проходит между двумя OUTами для нажатой s1 и s2 соответственно, записываем, записыаем, скок должно было быть, считаем процент погрешности
P.S должно получиться не особо дохуя